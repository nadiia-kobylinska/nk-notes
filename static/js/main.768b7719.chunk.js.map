{"version":3,"sources":["components/edit-div/index.js","components/editor-panel/index.js","components/html-div/index.js","utility/validate-text-length.js","utility/clean-up-html.js","components/notes-manage/formReducer.jsx","components/round-counter/index.jsx","components/notes-manage/form-view.js","components/notes-manage/index.js","components/create-button/index.js","components/note-detail/note-detail-view.js","components/note-detail/index.js","services/local.storage.services.js","services/data.source.js","components/headline-button-screen/index.js","utility/text.js","components/notes-list/note-preview.js","components/notes-list/index.js","components/search/index.js","App.js","reportWebVitals.js","index.js"],"names":["EditDiv","props","className","ref","fieldRef","contentEditable","id","onInput","changeEv","onFocus","onKeyUp","counter","EditorPanel","codeView","modeExecCommand","mode","document","execCommand","state","editor","current","bind","Box","Button","onClick","React","HTMLDiv","createRange","node","chars","range","selectNode","setStart","count","setEnd","nodeType","Node","TEXT_NODE","textContent","length","lp","childNodes","setCurrentCursorPosition","selection","window","getSelection","collapse","removeAllRanges","addRange","getCurrentCursorPosition","parent","charCount","focusNode","parentNode","isChildOf","focusOffset","previousSibling","validateTextLength","e","field","limit","highlight","html","innerText","percent","pos","start","slice","overlimit","innerHTML","valid","Element","prototype","removeAttributes","attrs","forEach","attr","removeAttribute","cleanUpHTML","el","tags","querySelectorAll","remove","style","position","formReducer","action","type","payload","RoundCounter","initialState","loading","title","content","editMode","countCharTitle","percentCharTitle","countCharContent","percentCharContent","Form","useReducer","dispatch","titleRef","useRef","contentRef","resetForm","focus","saveNote","preventDefault","hasNoteIndex","notes","findIndex","obj","save","Date","now","error","console","log","useEffect","note","filter","isDisabled","component","noValidate","autoComplete","sx","mt","m","width","onSubmit","display","justifyContent","marginBottom","alignItems","Typography","variant","gutterBottom","mb","result","target","Stack","direction","spacing","color","startIcon","cancel","LoadingButton","loadingPosition","disabled","NotesManage","this","create","CreateButton","size","Note","data","useState","anchorEl","setAnchorEl","top","left","positionPopup","setPositionPopup","a","addEventListener","alertLink","removeEventListener","handleClose","open","Boolean","undefined","event","setAttribute","getAttribute","getBoundingClientRect","y","height","x","flexGrow","flexWrap","dangerouslySetInnerHTML","__html","Popover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onClose","p","NoteDetail","getLocalStorage","key","defaultValue","localStorage","getItem","JSON","parse","getNotesDS","setNotesDS","setItem","stringify","HeadlineButtonScreen","flexDirection","textAlign","headline","truncate","str","substring","NotePreview","Card","CardActionArea","CardContent","replace","CardActions","IconButton","edit","delete","NoteList","filtered","map","i","minWidth","Search","searchField","setSearchField","filteredNotes","toLowerCase","includes","Grid","item","xs","md","TextField","placeholder","onChange","value","App","isEmpty","previewMode","updateList","setState","index","stopPropagation","openNote","find","Container","maxWidth","container","columns","Fab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.768b7719.chunk.js","sourcesContent":["import * as PropTypes from \"prop-types\";\n\nconst EditDiv = (props) => {\n    return (\n        <div className={'MuiFormControl-root MuiTextField-root editable-field'}>\n            <label className={\"MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard MuiFormLabel-root MuiFormLabel-colorSecondary \"}>\n                Title\n            </label>\n            <div ref={props.fieldRef}\n                 className=\"text-field\"\n                 contentEditable={\"plaintext-only\"}\n                 id={\"editfield\"}\n                 onInput={props.changeEv}\n                 onFocus={props.changeEv}\n                 onKeyUp={props.changeEv}\n            ></div>\n            {props.counter}\n        </div>\n    );\n}\nEditDiv.propTypes = {\n    fieldRef: PropTypes.any,\n    changeEv: PropTypes.func,\n};\nexport default EditDiv;","import {Box, Button} from \"@mui/material\";\nimport * as React from \"react\";\nclass EditorPanel extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            editor: props.editor.current\n        }\n        this.codeView = this.codeView.bind(this);\n        this.modeExecCommand = this.modeExecCommand.bind(this);\n    }\n    codeView = function (){\n\n    }\n    modeExecCommand = function (mode){\n        document.execCommand(mode)\n    }\n    render() {\n        return(\n            <Box>\n                <Button onClick={() => this.modeExecCommand('bold')}><b>B</b></Button>\n                <Button onClick={() => this.modeExecCommand('italic')}><i>I</i></Button>\n                <Button onClick={() => this.modeExecCommand('underline')}><u>U</u></Button>\n                <Button onClick={() => this.modeExecCommand('insertUnorderedList')}>ul</Button>\n                <Button onClick={() => this.modeExecCommand('insertOrderedList')}>ol</Button>\n                {/*<Button onClick={this.codeView}>HTML</Button>*/}\n            </Box>\n        )\n    }\n\n}\nexport default EditorPanel;","import * as PropTypes from \"prop-types\";\nimport EditorPanel from \"../editor-panel\";\nconst HTMLDiv = (props) => {\n    return (\n        <div className={'MuiFormControl-root MuiTextField-root editable-field'}>\n            <label className={\"MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard MuiFormLabel-root MuiFormLabel-colorSecondary \"}>\n                Content\n            </label>\n            <EditorPanel editor={props.fieldRef}/>\n            <div ref={props.fieldRef}\n                 className=\"text-field html-field\"\n                 contentEditable\n                 onInput={props.changeEv}\n                 onFocus={props.changeEv}\n                 onKeyUp={props.changeEv}\n            ></div>\n            {props.counter}\n        </div>\n    );\n}\n\nHTMLDiv.propTypes = {\n    ref: PropTypes.any,\n    changeEv: PropTypes.any\n};\nexport default HTMLDiv;","function createRange(node, chars, range) {\n    if (!range) {\n        range = document.createRange()\n        range.selectNode(node);\n        range.setStart(node, 0);\n    }\n\n    if (chars.count === 0) {\n        range.setEnd(node, chars.count);\n    } else if (node && chars.count > 0) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            if (node.textContent.length < chars.count) {\n                chars.count -= node.textContent.length;\n            } else {\n                range.setEnd(node, chars.count);\n                chars.count = 0;\n            }\n        } else {\n            for (let lp = 0; lp < node.childNodes.length; lp++) {\n                range = createRange(node.childNodes[lp], chars, range);\n                if (chars.count === 0) break;\n            }\n        }\n    }\n\n    return range;\n}\nfunction setCurrentCursorPosition(node, chars) {\n    if (chars >= 0) {\n        let selection = window.getSelection();\n        let range = createRange(node, { count: chars });\n\n        if (range) {\n            range.collapse(false);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n    }\n}\nfunction isChildOf(node, parent) {\n    while (node !== null) {\n        if (node.id === parent.id) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\nfunction getCurrentCursorPosition(parent) {\n    let selection = window.getSelection(),\n        charCount = -1,\n        node;\n\n    if (selection.focusNode && isChildOf(selection.focusNode, parent)) {\n        node = selection.focusNode;\n        charCount = selection.focusOffset;\n        while (node) {\n            if (node.id === parent.id) {\n                break;\n            }\n\n            if (node.previousSibling) {\n                node = node.previousSibling;\n                charCount += node.textContent.length;\n            } else {\n                node = node.parentNode;\n                if (node === null) {\n                    break\n                }\n            }\n        }\n    }\n\n    return charCount;\n}\n\nconst validateTextLength = (e, field, limit, ref, highlight= true)=>{\n    const html = field.innerText;\n\n    let count = limit - html.length;\n    let percent = html.length * 100 / limit;\n    let pos = getCurrentCursorPosition(field);\n    if (highlight && html.length > limit) {\n        let start = html.slice(0, limit);\n        let overlimit = html.slice(limit);\n        overlimit = `<span style=\"background:red; color:#ffffff\">${overlimit}</span>`;\n        ref.current.innerHTML = start + overlimit;\n        setCurrentCursorPosition(field, pos);\n    }\n    return {\n        valid: percent<=100,\n        count : count,\n        percent : percent<=100 ? percent : 100.1\n    }\n}\nexport default validateTextLength;","Element.prototype.removeAttributes = function(attrs) {\n    attrs.forEach(attr => this.removeAttribute(attr))\n}\nfunction cleanUpHTML(el,tags, attr=[]){\n    el.querySelectorAll(tags).forEach((e)=>{\n        e.remove();\n    });\n    el.querySelectorAll('*').forEach((e) =>{\n        if(e.style.position === 'fixed'){\n            e.style.position = 'absolute'\n        }\n        e.removeAttributes(attr);\n    })\n}\nexport default cleanUpHTML;","\nfunction formReducer(state, action) {\n    switch (action.type) {\n        case 'change':\n            return {...state, ...action.payload};\n        default:\n            return state\n    }\n}\n\nexport default formReducer;","const RoundCounter = (props) => {\n  return (props.percent!==0 && <div className=\"characters\">\n          <div className={props.count >= 0 ? \"circle-wrap\" : \"circle-red circle-wrap\"} style={{\"--deg\": props.percent}}>\n              <div className=\"circle\">\n                  <div className=\"mask full\">\n                      <div className=\"fill\"> </div>\n                  </div>\n                  <div className=\"mask half\">\n                      <div className=\"fill\"> </div>\n                  </div>\n                  <div className=\"inside-circle\">{props.count<10 && <span className={props.count >= 0 ? \"text-orange\" : \"text-red\"}>{props.count} </span> }\n                  </div>\n              </div>\n          </div>\n      </div>\n  )\n}\nexport default RoundCounter;","import {Box, Button, Stack, Typography} from \"@mui/material\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport {useRef, useEffect, useReducer} from \"react\";\nimport EditDiv from \"../edit-div\";\nimport HTMLDiv from \"../html-div\";\nimport validateTextLength from \"../../utility/validate-text-length\";\nimport cleanUpHTML from \"../../utility/clean-up-html\";\nimport formReducer from \"./formReducer\";\nimport RoundCounter from \"../round-counter\";\n\nconst initialState = {\n    loading: false,\n    title: '',\n    content: '',\n    editMode: false,\n    countCharTitle: 0,\n    percentCharTitle: 0,\n    countCharContent: 0,\n    percentCharContent: 0\n}\nconst Form = (props) => {\n\n    const [state, dispatch] = useReducer(formReducer, initialState);\n\n    let titleRef = useRef(null);\n    let contentRef = useRef(null);\n\n    useEffect(()=>{\n        if (!props.id) {\n            resetForm();\n        }else if (props.id !== state.editMode) {\n            dispatch({type: 'change', payload: { editMode: props.id}})\n        }\n    },[props.id]);\n\n    useEffect(()=>{\n        if (props.id && state.editMode && props.id === state.editMode) {\n            const note = props.notes.filter(note => note.id === props.id)[0];\n            dispatch({type: 'change', payload: {\n                    content: note.content,\n                    title: note.title\n            }})\n            titleRef.current.innerHTML = note.title;\n            contentRef.current.innerHTML = note.content;\n            titleRef.current.focus();\n        }\n    },[state.editMode]);\n\n    function resetForm(){\n        dispatch({type: 'change', payload: initialState})\n        titleRef.current.innerHTML = '';\n        contentRef.current.innerHTML = '';\n        titleRef.current.focus();\n    }\n    function saveNote(e) {\n        e.preventDefault();\n        dispatch({type: 'change', payload: {loading: true}})\n        try {\n            const hasNoteIndex = props.notes.findIndex((obj => obj.id === state.editMode));\n            props.save({\n                    id: hasNoteIndex!==-1 ? state.editMode : Date.now(),\n                    title: state.title || \"No name\",\n                    content: state.content || \"empty\"\n                }, hasNoteIndex);\n\n            resetForm();\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    function changeTitle(e){\n        const result = validateTextLength(e, e.target,100, titleRef);\n        dispatch({type: 'change', payload: {\n                countCharTitle: result.count,\n                percentCharTitle:result.percent,\n                title: e.target.innerText\n        }})\n    }\n    function changeContent(e){\n        cleanUpHTML(e.target,\n            'iframe, script, noscript, frame, form, input, textarea',\n            ['data-ga ','id','jsaction', 'jscontroller', 'onclick', 'data-ved', 'ping', 'data-google-query-id','itemprop']\n        );\n        const result = validateTextLength(e, e.target,1000, contentRef, false);\n        dispatch({type: 'change', payload: {\n            countCharContent: result.count,\n            percentCharContent:result.percent,\n            content: e.target.innerHTML\n        }})\n    }\n\n    if (props.id && !state.editMode && props.id !== state.editMode){\n        dispatch({type: 'change', payload: {editMode: props.id}})\n    }\n    const isDisabled = state.content === \"\" || state.title === \"\" || state.percentCharTitle>100 || state.percentCharContent>100;\n\n    return (\n        <Box\n            component=\"form\"\n            noValidate\n            autoComplete=\"off\"\n            sx={{mt: 1, '& .MuiTextField-root': { m: 1, width: '100%' }}}\n            onSubmit={saveNote}\n        >\n            <Box sx={{display:'flex',justifyContent:'space-between',marginBottom:'1rem',mt:10, alignItems:'flex-start'}}>\n                <Typography\n                    variant=\"h4\"\n                    component=\"div\"\n                    gutterBottom\n                    className={\"fi=orm-title\"}\n                    sx={{ mb: 5}}>\n                    {!state.editMode ? \"New Note\" : \"Edit Note\"}\n                </Typography>\n            </Box>\n            <EditDiv\n                changeEv = {changeTitle}\n                fieldRef = {titleRef}\n                counter = <RoundCounter count={state.countCharTitle} percent={state.percentCharTitle}/>\n            />\n            <HTMLDiv\n                changeEv = {changeContent}\n                fieldRef = {contentRef}\n                counter = <RoundCounter count={state.countCharContent} percent={state.percentCharContent}/>\n            />\n            <Stack direction=\"row\" spacing={4} sx={{\n                mt: 3,\n                justifyContent:'flex-end'\n            }}>\n                <Button aria-label=\"cancel\" variant=\"text\" color=\"secondary\" startIcon={<CancelIcon />} onClick={props.cancel}>\n                    Cancel\n                </Button>\n                <LoadingButton\n                    color=\"secondary\"\n                    onClick={saveNote}\n                    loading={state.loading}\n                    loadingPosition=\"start\"\n                    startIcon={<CheckIcon />}\n                    variant=\"contained\"\n                    disabled={isDisabled}\n                >\n                    Save\n                </LoadingButton>\n            </Stack>\n        </Box>\n    );\n}\nexport default Form;","import * as React from 'react';\nimport Form from \"./form-view\";\nexport default class NotesManage extends React.Component {\n    render() {\n        return (\n            <Form id={this.props.id} cancel={this.props.cancel} notes={this.props.notes} save={this.props.save} create={this.props.create}/>\n        );\n    }\n}","import AddIcon from '@mui/icons-material/Add';\nimport {Button} from '@mui/material';\n\nconst CreateButton = (props)=>{\n    return(<Button\n        aria-label=\"Create\"\n        variant=\"contained\"\n        color=\"secondary\"\n        startIcon={<AddIcon/>}\n        size=\"large\"\n        onClick={props.create}\n        sx={{ mb: 5}}\n    >\n        Create note\n    </Button>);\n}\nexport default CreateButton;","import {Box, Typography, Popover, Button} from \"@mui/material\";\nimport * as PropTypes from \"prop-types\";\nimport {useEffect, useRef, useState} from \"react\";\nimport CreateButton from \"../create-button\";\n\nconst Note = (props) => {\n    const {title, content} = props.data;\n    const contentRef = useRef(null);\n    const [anchorEl, setAnchorEl] = useState('');\n    const [positionPopup, setPositionPopup] = useState({top:0, left:0});\n\n    useEffect(()=>{\n        const links = contentRef.current.querySelectorAll('a');\n        links.forEach((a)=>{\n            a.addEventListener('click', alertLink)\n        })\n        return () => {\n            window.removeEventListener('click', alertLink)\n        }\n    },[props.data]);\n\n    useEffect(()=>{},[anchorEl]);\n\n    const handleClose = () => {\n        setAnchorEl('');\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const alertLink = event =>{\n        event.preventDefault();\n        event.target.setAttribute('aria-describedby',id);\n        setAnchorEl(event.target.getAttribute('href'));\n        setPositionPopup({\n            top:  event?.target?.getBoundingClientRect().y + event?.target?.getBoundingClientRect().height,\n            left: event?.target?.getBoundingClientRect().x\n        });\n    }\n    function openLink(){\n        if (anchorEl) {\n            window.open(anchorEl);\n        }\n        handleClose();\n    }\n    return (\n    <Box component=\"div\" className={\"notes-preview\"} sx={{mt: 1, mb:10, flexGrow:1, width:'100%'}}>\n        <Box sx={{display:'flex',justifyContent:'space-between',marginBottom:'1rem',mt:10, alignItems:'flex-start', flexWrap:'wrap-reverse'}}>\n            <Typography variant=\"h4\" component=\"div\" gutterBottom className={\"notes-title\"} sx={{ mb: 5}}>\n                {title}\n            </Typography>\n            <CreateButton create={props.create}/>\n        </Box>\n        <Box component=\"div\">\n            <Typography ref={contentRef} variant=\"body2\" gutterBottom className={\"notes-description\"}\n                        dangerouslySetInnerHTML={{__html:content}}>\n            </Typography>\n            <Popover\n                anchorReference=\"anchorPosition\"\n                anchorPosition={{ top: positionPopup.top, left: positionPopup.left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                onClose={handleClose}\n                id={id}\n                open={open}\n            >\n                <Typography variant=\"body3\" sx={{p:1}}>Open the link in a new tab?</Typography>\n                <Button onClick={handleClose} size={'small'}>No</Button>\n                <Button onClick={openLink} size={'small'}>Yes</Button>\n            </Popover>\n        </Box>\n    </Box>\n    );\n}\nNote.propTypes = {\n    data: PropTypes.object\n}\nexport default Note;","import * as React from \"react\";\nimport Note from \"./note-detail-view\";\nimport * as PropTypes from \"prop-types\";\n\nconst NoteDetail = (props) => {\n    return <Note data={props.note} create={props.create}/>\n}\n\nNoteDetail.propTypes = {\n    data: PropTypes.object\n}\nexport default NoteDetail;","import { useState, useEffect } from \"react\";\n\nexport const getLocalStorage = (key, defaultValue) => {\n    const data = localStorage.getItem(key);\n    const initial = JSON.parse(data);\n    return initial || defaultValue;\n};\n\nexport const useLocalStorage = (key, defaultValue) => {\n    const [value, setValue] = useState(() => {\n        return getLocalStorage(key, defaultValue);\n    });\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n\n    return [value, setValue];\n};\n\n","import {getLocalStorage} from \"./local.storage.services\";\n\nconst getNotesDS = getLocalStorage(\"list\", []);\nconst setNotesDS = (notes)=>localStorage.setItem('list', JSON.stringify(notes));\n\nexport {getNotesDS, setNotesDS};","import {Box, Button, Typography} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nconst HeadlineButtonScreen = (props) => {\n    return (\n        <Box className={'fullscreen-container'} sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            p: 1,\n            m: 1\n        }}>\n            <Typography\n                variant=\"h2\"\n                component=\"h1\"\n                gutterBottom\n                className={\"notes-title\"}\n                sx={{textAlign: 'center', mb: 10}}\n                dangerouslySetInnerHTML={{__html:props.headline}}\n            >\n            </Typography>\n            <Button\n                aria-label=\"Create\"\n                variant=\"contained\"\n                color=\"secondary\"\n                startIcon={<AddIcon/>}\n                size=\"large\"\n                onClick={props.create}\n            >\n                Create note\n            </Button>\n        </Box>\n    )\n}\nHeadlineButtonScreen.propTypes = {\n    create : PropTypes.func,\n    headline: PropTypes.string\n}\nexport default HeadlineButtonScreen;","export function truncate(str, limit) {\n    return str.length > limit ? str.substring(0, limit-1) + \"...\" : str;\n}\nexport function plainText(str) {\n    const regex = /(<([^>]+)>)/ig;\n    return str.replace(regex, '');\n}","import {Card, CardActionArea,CardActions, CardContent, Typography} from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport * as React from \"react\";\nimport {plainText, truncate} from \"../../utility/text\";\n\nconst NotePreview = (props) => {\n    const {title, content, id} = props.data;\n\n    return(\n    <Card className={\"notes-item\"} onClick={()=>props.open(id)}>\n        <CardActionArea component={\"div\"}>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\"  className={\"notes-title\"}>\n                    {title}\n                </Typography>\n                <Typography\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                    className={\"notes-description\"}\n                    dangerouslySetInnerHTML={{__html:truncate(plainText(content), 200)}}\n                >\n                </Typography>\n            </CardContent>\n            <CardActions  className={\"notes-btns\"}>\n                <IconButton aria-label=\"edit\" color=\"primary\" onClick={(event)=>props.edit(event, id)}>\n                    <EditIcon />\n                </IconButton>\n                <IconButton aria-label=\"delete\" color=\"primary\" onClick={(event)=>props.delete(event, id)}>\n                    <DeleteIcon />\n                </IconButton>\n            </CardActions>\n        </CardActionArea>\n    </Card>\n    )\n}\nexport default NotePreview;","import {Box} from \"@mui/material\";\nimport * as React from \"react\";\nimport NotePreview from \"./note-preview\";\n\nconst NoteList = (props) => {\n    const notes = props.notes || [];\n\n    const filtered = notes.map((note, i) => <NotePreview data={note} key={i} delete={props.delete} edit={props.edit} open={props.open}/>);\n    return (\n        <Box sx={{\n            display: 'flex',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n            mt: 3,\n            minWidth:'100%'\n        }}>\n            {filtered}\n        </Box>\n    )\n\n}\nexport default NoteList;","import NoteList from \"../notes-list/\";\nimport React, { useState } from 'react';\nimport {Box, Stack, TextField, Grid} from \"@mui/material\";\n\nconst Search = (props)=>{\n    const [searchField, setSearchField] = useState(\"\");\n    const notes = props.notes || [];\n\n    const filteredNotes = notes.filter(\n        note => {\n            return (\n                note.title.toLowerCase().includes(searchField.toLowerCase())\n                || note.content.toLowerCase().includes(searchField.toLowerCase())\n            );\n        }\n    );\n    const handleChange = e => setSearchField(e.target.value);\n\n    return (\n        <Grid item xs={16} md={5} sx={{\n            display: 'flex',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n            mt: 10,\n            mb: 10,\n            width:'100%'\n        }}>\n            <Stack spacing={2} sx={{ width: '100%' }}>\n                <TextField type = \"search\" placeholder = \"Search\" onChange = {handleChange} variant=\"standard\" />\n            </Stack>\n            <NoteList notes={filteredNotes} delete={props.delete} edit={props.edit} open={props.open}/>\n        </Grid>\n    );\n\n}\nexport default Search;","import * as React from 'react';\nimport './App.css';\nimport {Box, Fab, Grid} from '@mui/material';\nimport Container from '@mui/material/Container';\nimport AddIcon from '@mui/icons-material/Add';\nimport NotesManage from \"./components/notes-manage\";\nimport NoteDetail from \"./components/note-detail\";\nimport {getNotesDS, setNotesDS} from \"./services/data.source\";\nimport HeadlineButtonScreen from \"./components/headline-button-screen\";\nimport Search from \"./components/search\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: getNotesDS,\n            isEmpty: !getNotesDS.length,\n            previewMode: getNotesDS.length>0,\n            editMode: false,\n            id: false\n        }\n        this.create = this.create.bind(this);\n        this.cancel = this.cancel.bind(this);\n        this.updateList = this.updateList.bind(this);\n        this.delete = this.delete.bind(this);\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.open = this.open.bind(this);\n    }\n    create() {\n        this.setState({\n            isEmpty: false,\n            editMode: true,\n            id: false,\n            previewMode: false\n        });\n    }\n    cancel() {\n        this.setState({\n            isEmpty: true,\n            editMode: false,\n            previewMode: true,\n            id: false\n        });\n    }\n    updateList(notes) {\n        this.setState({\n            notes: notes,\n            id: false\n        });\n    }\n    save(note, index) {\n        let notes = this.state.notes;\n        if (index >= 0){\n            notes[index] = note;\n        }else{\n            notes = [ ...notes, note]\n        }\n        setNotesDS(notes);\n        this.updateList(notes);\n    }\n    delete(event, id){\n        event.stopPropagation();\n        const notes = this.state.notes.filter(note => note.id !== id)\n        setNotesDS(notes);\n\n        this.setState((state)=>({\n            notes: notes,\n            id: id === state.id ? false : state.id,\n            editMode: id === state.id ? false : true,\n            previewMode:  id === state.id ? true : false\n\n        }));\n    }\n    edit(event, id){\n        event.stopPropagation();\n        this.setState({\n            editMode: true,\n            previewMode: false,\n            id: id\n        });\n    }\n    open(id){\n        this.setState({\n            editMode: false,\n            previewMode: true,\n            id: id\n        });\n    }\n    render() {\n        let openNote = {\n            title : 'Empty',\n            content : 'Choose a note to display.',\n        }\n        if (this.state.previewMode && this.state.id) {\n            openNote = this.state.notes.find(note => note.id === this.state.id);\n        }\n        return (\n            <div className=\"App\">\n                <Container maxWidth=\"lg\">\n                    {!this.state.notes.length && this.state.isEmpty  &&\n                        <HeadlineButtonScreen\n                            create={this.create}\n                            headline={\"Welcome! <br/> You can create your first note.\"}\n                        />\n                    }\n                    {(this.state.notes.length || !this.state.isEmpty) &&\n                        <Grid container spacing={5} columns={16}>\n                            <Search notes={this.state.notes} delete={this.delete} edit={this.edit} open={this.open}/>\n                            <Grid item xs={16} md={11} className={\"col-wrp\"}>\n                                {((this.state.editMode || this.state.id) && !this.state.previewMode) &&\n                                    <Box component=\"div\" className={\"notes-create\"}\n                                         sx={{\n                                             mb: 10\n                                         }}>\n                                        <NotesManage\n                                            id={this.state.id}\n                                            cancel={this.cancel}\n                                            notes={this.state.notes}\n                                            save={this.save}\n                                            create={this.create}\n                                        />\n                                    </Box>\n                                }\n                                {this.state.previewMode && <NoteDetail note={openNote} create={this.create}/>}\n                            </Grid>\n\n                        </Grid>\n                    }\n                </Container>\n                <div className={\"fixed-button\"}>\n                    <Fab color=\"secondary\" aria-label=\"add\" onClick={this.create}>\n                        <AddIcon/>\n                    </Fab>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}