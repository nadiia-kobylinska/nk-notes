{"version":3,"sources":["components/editor-panel/index.js","components/edit-div/index.js","utility/validate-text-length.js","utility/clean-up-html.js","components/notes-manage/func.js","components/notes-manage/formReducer.jsx","components/round-counter/index.jsx","components/notes-manage/form-view.js","components/notes-manage/index.js","components/create-button/index.js","components/note-detail/note-detail-view.js","components/note-detail/index.js","services/local.storage.services.js","services/data.source.js","components/headline-button-screen/index.js","utility/text.js","components/notes-list/note-preview.js","components/notes-list/index.js","components/search/index.js","App.js","reportWebVitals.js","index.js"],"names":["EditorPanel","props","codeView","modeExecCommand","mode","document","execCommand","state","editor","current","bind","Box","Button","onClick","React","EditDiv","defaultRef","useRef","value","editorRef","useState","setForceUpd","useEffect","editNote","className","label","type","ref","contentEditable","dangerouslySetInnerHTML","__html","autoFocus","focus","onInput","changeEv","onFocus","onKeyUp","counter","createRange","node","chars","range","selectNode","setStart","count","setEnd","nodeType","Node","TEXT_NODE","textContent","length","lp","childNodes","setCurrentCursorPosition","selection","window","getSelection","collapse","removeAllRanges","addRange","getCurrentCursorPosition","parent","charCount","focusNode","id","parentNode","isChildOf","focusOffset","previousSibling","validateTextLength","e","limit","highlight","field","target","html","innerText","percent","pos","start","slice","overlimit","innerHTML","valid","Element","prototype","removeAttributes","attrs","forEach","attr","removeAttribute","cleanUpHTML","el","tags","querySelectorAll","remove","style","position","isValid","content","title","percentCharTitle","percentCharContent","formReducer","action","payload","loading","RoundCounter","Form","note","initialState","countCharTitle","countCharContent","useReducer","dispatch","resetForm","onSubmit","preventDefault","onSave","pageTitle","noValidate","component","autoComplete","sx","mt","m","width","display","justifyContent","marginBottom","alignItems","Typography","variant","gutterBottom","mb","result","Stack","direction","spacing","color","startIcon","onCancel","LoadingButton","loadingPosition","disabled","NotesManage","this","CreateButton","size","onCreate","Note","data","contentRef","anchorEl","setAnchorEl","top","left","positionPopup","setPositionPopup","a","addEventListener","alertLink","removeEventListener","handleClose","open","Boolean","undefined","event","setAttribute","getAttribute","getBoundingClientRect","y","height","x","flexGrow","flexWrap","Popover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onClose","p","NoteDetail","getLocalStorage","key","defaultValue","localStorage","getItem","JSON","parse","getNotesDS","setNotesDS","notes","setItem","stringify","HeadlineButtonScreen","flexDirection","textAlign","headline","truncate","str","substring","NotePreview","Card","CardActionArea","CardContent","replace","CardActions","IconButton","edit","delete","NoteList","filtered","map","i","minWidth","Search","searchField","setSearchField","filteredNotes","filter","toLowerCase","includes","Grid","item","xs","md","TextField","placeholder","onChange","App","isEmpty","previewMode","editMode","updateList","setState","index","findIndex","obj","Date","now","stopPropagation","openNote","find","Container","maxWidth","container","columns","Fab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f569aceb.chunk.js","sourcesContent":["import {Box, Button} from \"@mui/material\";\nimport * as React from \"react\";\nclass EditorPanel extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            editor: props.editor.current\n        }\n        this.codeView = this.codeView.bind(this);\n        this.modeExecCommand = this.modeExecCommand.bind(this);\n    }\n    codeView = function (){\n\n    }\n    modeExecCommand = function (mode){\n        document.execCommand(mode)\n    }\n    render() {\n        return(\n            <Box>\n                <Button onClick={() => this.modeExecCommand('bold')}><b>B</b></Button>\n                <Button onClick={() => this.modeExecCommand('italic')}><i>I</i></Button>\n                <Button onClick={() => this.modeExecCommand('underline')}><u>U</u></Button>\n                <Button onClick={() => this.modeExecCommand('insertUnorderedList')}>ul</Button>\n                <Button onClick={() => this.modeExecCommand('insertOrderedList')}>ol</Button>\n                {/*<Button onClick={this.codeView}>HTML</Button>*/}\n            </Box>\n        )\n    }\n\n}\nexport default EditorPanel;","import * as PropTypes from \"prop-types\";\nimport {useEffect, useRef, useState} from \"react\";\nimport EditorPanel from \"../editor-panel\";\n\nconst EditDiv = (props) => {\n    const defaultRef = useRef(props.value);\n    const editorRef = useRef(null);\n    const [forceUpd, setForceUpd] = useState(null);\n\n    useEffect(() => {\n        defaultRef.current = props.value;\n        setForceUpd(props.value);\n    }, [props.editNote]);\n\n    return (\n        <div className={'MuiFormControl-root MuiTextField-root editable-field'}>\n            <label className={\"MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard MuiFormLabel-root MuiFormLabel-colorSecondary \"}>\n                {props.label}\n            </label>\n            {props.type==='html' && <EditorPanel editor={editorRef}/>}\n            <div className={`text-field ${props.type==='html' ? \"html-field\" : \"\"}`}\n                 ref = {editorRef}\n                 contentEditable={props.type==='text' ? \"plaintext-only\" : ''}\n                 dangerouslySetInnerHTML={{ __html: defaultRef.current}}\n                 autoFocus={props.focus}\n                 onInput={props.changeEv}\n                 onFocus={props.changeEv}\n                 onKeyUp={props.changeEv}\n            ></div>\n            {props.counter}\n        </div>\n    );\n}\nEditDiv.propTypes = {\n    changeEv: PropTypes.func,\n};\nexport default EditDiv;","function createRange(node, chars, range) {\n    if (!range) {\n        range = document.createRange()\n        range.selectNode(node);\n        range.setStart(node, 0);\n    }\n\n    if (chars.count === 0) {\n        range.setEnd(node, chars.count);\n    } else if (node && chars.count > 0) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            if (node.textContent.length < chars.count) {\n                chars.count -= node.textContent.length;\n            } else {\n                range.setEnd(node, chars.count);\n                chars.count = 0;\n            }\n        } else {\n            for (let lp = 0; lp < node.childNodes.length; lp++) {\n                range = createRange(node.childNodes[lp], chars, range);\n                if (chars.count === 0) break;\n            }\n        }\n    }\n\n    return range;\n}\nfunction setCurrentCursorPosition(node, chars) {\n    if (chars >= 0) {\n        let selection = window.getSelection();\n        let range = createRange(node, { count: chars });\n\n        if (range) {\n            range.collapse(false);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n    }\n}\nfunction isChildOf(node, parent) {\n    while (node !== null) {\n        if (node.id === parent.id) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\nfunction getCurrentCursorPosition(parent) {\n    let selection = window.getSelection(),\n        charCount = -1,\n        node;\n\n    if (selection.focusNode && isChildOf(selection.focusNode, parent)) {\n        node = selection.focusNode;\n        charCount = selection.focusOffset;\n        while (node) {\n            if (node.id === parent.id) {\n                break;\n            }\n\n            if (node.previousSibling) {\n                node = node.previousSibling;\n                charCount += node.textContent.length;\n            } else {\n                node = node.parentNode;\n                if (node === null) {\n                    break\n                }\n            }\n        }\n    }\n\n    return charCount;\n}\n\nconst validateTextLength = (e, limit, highlight= true)=>{\n    const field = e.target;\n    const html = field.innerText;\n    let count = limit - html.length;\n    let percent = html.length * 100 / limit;\n    let pos = getCurrentCursorPosition(field);\n    if (highlight && html.length > limit) {\n        let start = html.slice(0, limit);\n        let overlimit = html.slice(limit);\n        overlimit = `<span style=\"background:red; color:#ffffff\">${overlimit}</span>`;\n        field.innerHTML = start + overlimit;\n        setCurrentCursorPosition(field, pos);\n    }\n    return {\n        valid: percent<=100,\n        count : count,\n        percent : percent<=100 ? percent : 100.1\n    }\n}\nexport default validateTextLength;","Element.prototype.removeAttributes = function(attrs) {\n    attrs.forEach(attr => this.removeAttribute(attr))\n}\nfunction cleanUpHTML(el,tags, attr=[]){\n    el.querySelectorAll(tags).forEach((e)=>{\n        e.remove();\n    });\n    el.querySelectorAll('*').forEach((e) =>{\n        if(e.style.position === 'fixed'){\n            e.style.position = 'absolute'\n        }\n        e.removeAttributes(attr);\n    })\n}\nexport default cleanUpHTML;","export const isValid = (state) => {\n  return state ? (state.content !== \"\" && state.title !== \"\" && state.percentCharTitle<=100 && state.percentCharContent<=100) : false;\n}","import {isValid} from \"./func\";\n\nfunction formReducer(state, action) {\n    switch (action.type) {\n        case 'reset':\n            return action.payload;\n        case 'change':\n            action.payload.isValid = isValid(state);\n            return {...state, ...action.payload};\n        case 'loading':\n            return {loading: action.payload.loading};\n        default:\n            return state\n    }\n}\n\nexport default formReducer;","const RoundCounter = (props) => {\n  return (props.percent!==0 && <div className=\"characters\">\n          <div className={props.count >= 0 ? \"circle-wrap\" : \"circle-red circle-wrap\"} style={{\"--deg\": props.percent}}>\n              <div className=\"circle\">\n                  <div className=\"mask full\">\n                      <div className=\"fill\"> </div>\n                  </div>\n                  <div className=\"mask half\">\n                      <div className=\"fill\"> </div>\n                  </div>\n                  <div className=\"inside-circle\">{props.count<10 && <span className={props.count >= 0 ? \"text-orange\" : \"text-red\"}>{props.count} </span> }\n                  </div>\n              </div>\n          </div>\n      </div>\n  )\n}\nexport default RoundCounter;","import {Box, Button, Stack, Typography} from \"@mui/material\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport {useEffect, useReducer} from \"react\";\nimport EditDiv from \"../edit-div\";\nimport validateTextLength from \"../../utility/validate-text-length\";\nimport cleanUpHTML from \"../../utility/clean-up-html\";\nimport formReducer from \"./formReducer\";\nimport RoundCounter from \"../round-counter\";\nimport {isValid} from \"./func\";\n\nconst Form = (props) => {\n\n    const note = props.note;\n\n    const initialState = {\n        loading: false,\n        title: note?.title ?? '',\n        content: note?.content ?? '',\n        editNote: note?.id ?? null,\n        countCharTitle: 0,\n        percentCharTitle: 0,\n        countCharContent: 0,\n        percentCharContent: 0,\n        isValid: false\n    }\n\n    const [state, dispatch] = useReducer(formReducer, initialState, (initialState) => {\n        return {...initialState, isValid: isValid(initialState)};\n    });\n\n    useEffect(()=>{\n        if (!note) {\n            resetForm();\n            return;\n        }\n        if (note.id !== state.editNote) {\n            dispatch({type: 'change', payload: {...initialState,\n                editNote: note.id,\n                title: note.title,\n                content: note.content\n            }})\n        }\n    },[note]);\n\n    function resetForm(){\n        dispatch({type: 'reset', payload: initialState});\n    }\n    function onSubmit(e) {\n        e.preventDefault();\n        dispatch({type: 'loading', payload: {loading: true}})\n        props.onSave({\n            title: state.title,\n            content: state.content\n        }, state.editNote);\n\n        resetForm();\n    }\n    function onChangeTitle(e){\n        const result = validateTextLength(e,100);\n        dispatch({type: 'change', payload: {\n                countCharTitle: result.count,\n                percentCharTitle:result.percent,\n                title: e.target.innerText\n        }})\n    }\n    function onChangeContent(e){\n        cleanUpHTML(e.target,\n            'iframe, script, noscript, frame, form, input, textarea',\n            ['data-ga ','id','jsaction', 'jscontroller', 'onclick', 'data-ved', 'ping', 'data-google-query-id','itemprop']\n        );\n        const result = validateTextLength(e,1000, false);\n        dispatch({type: 'change', payload: {\n            countCharContent: result.count,\n            percentCharContent:result.percent,\n            content: e.target.innerHTML\n        }})\n    }\n    const pageTitle = !state.editNote ? \"New Note\" : \"Edit Note\";\n\n    return (\n        <Box noValidate component=\"form\" autoComplete=\"off\" sx={{mt: 1, '& .MuiTextField-root': { m: 1, width: '100%' }}}\n            onSubmit={onSubmit}\n        >\n            <Box sx={{display:'flex',justifyContent:'space-between',marginBottom:'1rem',mt:10, alignItems:'flex-start'}}>\n                <Typography variant=\"h4\" component=\"div\" gutterBottom  className={\"fi=orm-title\"} sx={{ mb: 5}}>\n                    {pageTitle}\n                </Typography>\n            </Box>\n            <EditDiv\n                type = \"text\"\n                label = \"Title\"\n                value = {state.title}\n                editNote = {state.editNote}\n                changeEv = {onChangeTitle}\n                counter = <RoundCounter count={state.countCharTitle} percent={state.percentCharTitle}/>\n                focus = {true}\n            />\n            <EditDiv\n                type = \"html\"\n                label = \"Content\"\n                value = {state.content}\n                editNote = {state.editNote}\n                changeEv = {onChangeContent}\n                counter = <RoundCounter count={state.countCharContent} percent={state.percentCharContent}/>\n                focus = {false}\n            />\n            <Stack direction=\"row\" spacing={4} sx={{mt: 3, justifyContent:'flex-end'}}>\n                <Button aria-label=\"cancel\" variant=\"text\" color=\"secondary\" startIcon={<CancelIcon />} onClick={props.onCancel}>\n                    Cancel\n                </Button>\n                <LoadingButton\n                    color=\"secondary\"\n                    onClick={onSubmit}\n                    loading={state.loading}\n                    loadingPosition=\"start\"\n                    startIcon={<CheckIcon />}\n                    variant=\"contained\"\n                    disabled={!state.isValid}\n                >\n                    Save\n                </LoadingButton>\n            </Stack>\n        </Box>\n    );\n}\nexport default Form;","import * as React from 'react';\nimport Form from \"./form-view\";\nexport default class NotesManage extends React.Component {\n    render() {\n        return (\n            <Form note={this.props.note} onCancel={this.props.onCancel} onSave={this.props.onSave}/>\n        );\n    }\n}","import AddIcon from '@mui/icons-material/Add';\nimport {Button} from '@mui/material';\n\nconst CreateButton = (props)=>{\n    return(<Button\n        aria-label=\"Create\"\n        variant=\"contained\"\n        color=\"secondary\"\n        startIcon={<AddIcon/>}\n        size=\"large\"\n        onClick={props.onCreate}\n        sx={{ mb: 5}}\n    >\n        Create note\n    </Button>);\n}\nexport default CreateButton;","import {Box, Typography, Popover, Button} from \"@mui/material\";\nimport * as PropTypes from \"prop-types\";\nimport {useEffect, useRef, useState} from \"react\";\nimport CreateButton from \"../create-button\";\n\nconst Note = (props) => {\n    const {title, content} = props.data;\n    const contentRef = useRef(null);\n    const [anchorEl, setAnchorEl] = useState('');\n    const [positionPopup, setPositionPopup] = useState({top:0, left:0});\n\n    useEffect(()=>{\n        const links = contentRef.current.querySelectorAll('a');\n        links.forEach((a)=>{\n            a.addEventListener('click', alertLink)\n        })\n        return () => {\n            window.removeEventListener('click', alertLink)\n        }\n    },[props.data]);\n\n    useEffect(()=>{},[anchorEl]);\n\n    const handleClose = () => {\n        setAnchorEl('');\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const alertLink = event =>{\n        event.preventDefault();\n        event.target.setAttribute('aria-describedby',id);\n        setAnchorEl(event.target.getAttribute('href'));\n        setPositionPopup({\n            top:  event?.target?.getBoundingClientRect().y + event?.target?.getBoundingClientRect().height,\n            left: event?.target?.getBoundingClientRect().x\n        });\n    }\n    function openLink(){\n        if (anchorEl) {\n            window.open(anchorEl);\n        }\n        handleClose();\n    }\n    return (\n    <Box component=\"div\" className={\"notes-preview\"} sx={{mt: 1, mb:10, flexGrow:1, width:'100%'}}>\n        <Box sx={{display:'flex',justifyContent:'space-between',marginBottom:'1rem',mt:10, alignItems:'flex-start', flexWrap:'wrap-reverse'}}>\n            <Typography variant=\"h4\" component=\"div\" gutterBottom className={\"notes-title\"} sx={{ mb: 5}}>\n                {title}\n            </Typography>\n            <CreateButton onCreate={props.onCreate}/>\n        </Box>\n        <Box component=\"div\">\n            <Typography ref={contentRef} variant=\"body2\" gutterBottom className={\"notes-description\"}\n                        dangerouslySetInnerHTML={{__html:content}}>\n            </Typography>\n            <Popover\n                anchorReference=\"anchorPosition\"\n                anchorPosition={{ top: positionPopup.top, left: positionPopup.left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                onClose={handleClose}\n                id={id}\n                open={open}\n            >\n                <Typography variant=\"body3\" sx={{p:1}}>Open the link in a new tab?</Typography>\n                <Button onClick={handleClose} size={'small'}>No</Button>\n                <Button onClick={openLink} size={'small'}>Yes</Button>\n            </Popover>\n        </Box>\n    </Box>\n    );\n}\nNote.propTypes = {\n    data: PropTypes.object\n}\nexport default Note;","import * as React from \"react\";\nimport Note from \"./note-detail-view\";\nimport * as PropTypes from \"prop-types\";\n\nconst NoteDetail = (props) => {\n    return <Note data={props.note} onCreate={props.onCreate}/>\n}\n\nNoteDetail.propTypes = {\n    data: PropTypes.object\n}\nexport default NoteDetail;","import { useState, useEffect } from \"react\";\n\nexport const getLocalStorage = (key, defaultValue) => {\n    const data = localStorage.getItem(key);\n    const initial = JSON.parse(data);\n    return initial || defaultValue;\n};\n\nexport const useLocalStorage = (key, defaultValue) => {\n    const [value, setValue] = useState(() => {\n        return getLocalStorage(key, defaultValue);\n    });\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n\n    return [value, setValue];\n};\n\n","import {getLocalStorage} from \"./local.storage.services\";\n\nconst getNotesDS = getLocalStorage(\"list\", []);\nconst setNotesDS = (notes)=>localStorage.setItem('list', JSON.stringify(notes));\n\nexport {getNotesDS, setNotesDS};","import {Box, Button, Typography} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nconst HeadlineButtonScreen = (props) => {\n    return (\n        <Box className={'fullscreen-container'} sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            p: 1,\n            m: 1\n        }}>\n            <Typography\n                variant=\"h2\"\n                component=\"h1\"\n                gutterBottom\n                className={\"notes-title\"}\n                sx={{textAlign: 'center', mb: 10}}\n                dangerouslySetInnerHTML={{__html:props.headline}}\n            >\n            </Typography>\n            <Button\n                aria-label=\"Create\"\n                variant=\"contained\"\n                color=\"secondary\"\n                startIcon={<AddIcon/>}\n                size=\"large\"\n                onClick={props.onCreate}\n            >\n                Create note\n            </Button>\n        </Box>\n    )\n}\nHeadlineButtonScreen.propTypes = {\n    onCreate : PropTypes.func,\n    headline: PropTypes.string\n}\nexport default HeadlineButtonScreen;","export function truncate(str, limit) {\n    return str.length > limit ? str.substring(0, limit-1) + \"...\" : str;\n}\nexport function plainText(str) {\n    const regex = /(<([^>]+)>)/ig;\n    return str.replace(regex, '');\n}","import {Card, CardActionArea,CardActions, CardContent, Typography} from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport * as React from \"react\";\nimport {plainText, truncate} from \"../../utility/text\";\n\nconst NotePreview = (props) => {\n    const {title, content, id} = props.data;\n\n    return(\n    <Card className={\"notes-item\"} onClick={()=>props.open(id)}>\n        <CardActionArea component={\"div\"}>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\"  className={\"notes-title\"}>\n                    {title}\n                </Typography>\n                <Typography\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                    className={\"notes-description\"}\n                    dangerouslySetInnerHTML={{__html:truncate(plainText(content), 200)}}\n                >\n                </Typography>\n            </CardContent>\n            <CardActions  className={\"notes-btns\"}>\n                <IconButton aria-label=\"edit\" color=\"primary\" onClick={(event)=>props.edit(event, id)}>\n                    <EditIcon />\n                </IconButton>\n                <IconButton aria-label=\"delete\" color=\"primary\" onClick={(event)=>props.delete(event, id)}>\n                    <DeleteIcon />\n                </IconButton>\n            </CardActions>\n        </CardActionArea>\n    </Card>\n    )\n}\nexport default NotePreview;","import {Box} from \"@mui/material\";\nimport * as React from \"react\";\nimport NotePreview from \"./note-preview\";\n\nconst NoteList = (props) => {\n    const notes = props.notes || [];\n\n    const filtered = notes.map((note, i) => <NotePreview data={note} key={i} delete={props.delete} edit={props.edit} open={props.open}/>);\n    return (\n        <Box sx={{\n            display: 'flex',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n            mt: 3,\n            minWidth:'100%'\n        }}>\n            {filtered}\n        </Box>\n    )\n\n}\nexport default NoteList;","import NoteList from \"../notes-list/\";\nimport React, { useState } from 'react';\nimport {Box, Stack, TextField, Grid} from \"@mui/material\";\n\nconst Search = (props)=>{\n    const [searchField, setSearchField] = useState(\"\");\n    const notes = props.notes || [];\n\n    const filteredNotes = notes.filter(\n        note => {\n            return (\n                note.title.toLowerCase().includes(searchField.toLowerCase())\n                || note.content.toLowerCase().includes(searchField.toLowerCase())\n            );\n        }\n    );\n    const handleChange = e => setSearchField(e.target.value);\n\n    return (\n        <Grid item xs={16} md={5} sx={{\n            display: 'flex',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n            mt: 10,\n            mb: 10,\n            width:'100%'\n        }}>\n            <Stack spacing={2} sx={{ width: '100%' }}>\n                <TextField type = \"search\" placeholder = \"Search\" onChange = {handleChange} variant=\"standard\" />\n            </Stack>\n            <NoteList notes={filteredNotes} delete={props.delete} edit={props.edit} open={props.open}/>\n        </Grid>\n    );\n\n}\nexport default Search;","import * as React from 'react';\nimport './App.css';\nimport {Box, Fab, Grid} from '@mui/material';\nimport Container from '@mui/material/Container';\nimport AddIcon from '@mui/icons-material/Add';\nimport NotesManage from \"./components/notes-manage\";\nimport NoteDetail from \"./components/note-detail\";\nimport {getNotesDS, setNotesDS} from \"./services/data.source\";\nimport HeadlineButtonScreen from \"./components/headline-button-screen\";\nimport Search from \"./components/search\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: getNotesDS,\n            isEmpty: !getNotesDS.length,\n            previewMode: getNotesDS.length>0,\n            editMode: false,\n            id: false\n        }\n        this.onCreate = this.onCreate.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.updateList = this.updateList.bind(this);\n        this.delete = this.delete.bind(this);\n        this.edit = this.edit.bind(this);\n        this.onSave = this.onSave.bind(this);\n        this.open = this.open.bind(this);\n    }\n    onCreate() {\n        this.setState({\n            isEmpty: false,\n            editMode: true,\n            id: false,\n            previewMode: false\n        });\n    }\n    onCancel() {\n        this.setState({\n            isEmpty: true,\n            editMode: false,\n            previewMode: true,\n            id: false\n        });\n    }\n    updateList(notes) {\n        this.setState({\n            notes: notes,\n            id: false\n        });\n    }\n    onSave(note, id) {\n        let notes = this.state.notes;\n        const index = notes.findIndex((obj => obj.id === id));\n\n        if (index >= 0){\n            note.id = id;\n            notes[index] = note;\n        }else{\n            note.id = Date.now();\n            notes = [ ...notes, note]\n        }\n        setNotesDS(notes);\n        this.updateList(notes);\n    }\n    delete(event, id){\n        event.stopPropagation();\n        const notes = this.state.notes.filter(note => note.id !== id)\n        setNotesDS(notes);\n\n        this.setState((state)=>({\n            notes: notes,\n            id: id === state.id ? false : state.id,\n            editMode: id !== state.id,\n            previewMode:  id === state.id\n\n        }));\n    }\n    edit(event, id){\n        event.stopPropagation();\n        this.setState({\n            editMode: true,\n            previewMode: false,\n            id: id\n        });\n    }\n    open(id){\n        this.setState({\n            editMode: false,\n            previewMode: true,\n            id: id\n        });\n    }\n    render() {\n        let openNote = {\n            title : 'Empty',\n            content : 'Choose a note to display.',\n        }\n        if (this.state.previewMode && this.state.id) {\n            openNote = this.state.notes.find(note => note.id === this.state.id);\n        }\n        const note = this.state.notes.find(note => note.id === this.state.id);\n        return (\n            <div className=\"App\">\n                <Container maxWidth=\"lg\">\n                    {!this.state.notes.length && this.state.isEmpty  &&\n                        <HeadlineButtonScreen\n                            onCreate={this.onCreate}\n                            headline={\"Welcome! <br/> You can create your first note.\"}\n                        />\n                    }\n                    {(this.state.notes.length || !this.state.isEmpty) &&\n                        <Grid container spacing={5} columns={16}>\n                            <Search notes={this.state.notes} delete={this.delete} edit={this.edit} open={this.open}/>\n\n                            <Grid item xs={16} md={11} className={\"col-wrp\"}>\n                                {((this.state.editMode || this.state.id) && !this.state.previewMode) &&\n                                    <Box component=\"div\" className={\"notes-create\"} sx={{ mb: 10 }}>\n                                        <NotesManage\n                                            onCancel={this.onCancel}\n                                            note={note}\n                                            onSave={this.onSave}\n                                        />\n                                    </Box>\n                                }\n                                {this.state.previewMode && <NoteDetail note={openNote} onCreate={this.onCreate}/>}\n                            </Grid>\n\n                        </Grid>\n                    }\n                </Container>\n                <div className={\"fixed-button\"}>\n                    <Fab color=\"secondary\" aria-label=\"add\" onClick={this.onCreate}>\n                        <AddIcon/>\n                    </Fab>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}